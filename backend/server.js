require("./models/Student"); // ‚úÖ Charge le mod√®le Student
require("dotenv").config();
const express = require("express");
const cors = require("cors");
const connectDB = require("./config/db");

// Connexion √† la base de donn√©es
connectDB();

const app = express();
const PORT = process.env.PORT || 5000;

// ‚û§ Appliquer les middlewares avant les routes
app.use(express.json());
app.use(express.urlencoded({ extended: true })); // Permet de lire les donn√©es de formulaire
app.use(cors());

app.get("/", (_req, res) => {
  res.send("‚úÖ API de Gestion des Notes - Serveur en marche üöÄ");
});

// ‚û§ Importation des routes
const studentRoutes = require("./routes/studentRoutes");
const moduleGlobalRoutes = require("./routes/moduleGlobalRoutes");
const semestreRoutes = require("./routes/semestreRoutes");
const departementRoutes = require("./routes/departementRoutes");
const noteRoutes = require("./routes/noteRoutes");


// ‚û§ Enregistrement des routes
app.use("/api/students", studentRoutes);
app.use("/api/modules-globales", moduleGlobalRoutes);
app.use("/api/semestres", semestreRoutes);
app.use("/api/departements", departementRoutes);
app.use("/api/notes", noteRoutes);

// ‚û§ D√©marrer le serveur
app.listen(PORT, () => {
  console.log(`‚úÖ Serveur d√©marr√© sur http://localhost:${PORT}`);
});
